#!/bin/bash

usage() {
  self_version
  cat <<EOL
Usage: bundlerenv <command> [<args>]

Some useful bundlerenv commands are:
   install   Install a Bundler version using ruby-gems
   version   Show the current Bundler version
   versions  List all Bundler versions available to bundlerenv

Install:
echo 'eval "\$\(bundlerenv init\)"' >> ~/.bashrc
EOL
}

main() {
  if [ "$1" = "init" ]; then
    init
  elif [ "$1" = "install" ]; then
    install $2
  elif [ "$1" = "version" ]; then
    version
  elif [ "$1" = "versions" ]; then
    versions
  elif [ "$1" = "-v" ]; then
    self_version
  elif [ "$1" = "--version" ]; then
    self_version
  else
    usage
  fi
}

init() {
  cat << EOL
bundle() {
  local bundle="/usr/local/var/rbenv/shims/bundle"
  if [ -e "Gemfile.lock" ]; then
    local bundler_version=\$(grep 'BUNDLED WITH' -A1 Gemfile.lock | grep '\d\+\.\d\+\.\d\+' | sed -e 's/   //')
  fi

  if [ "\$bundler_version" = "" ]; then
    \$bundle \$*
  else
    local installed="\$(gem list ^bundler$ | sed -e 's/bundler (//' -e 's/)//')"
    if [ "\$(echo \$installed | grep \$bundler_version)" = "" ]; then
      echo "Bundler \$bundler_version is not installed."
      return 0
    fi
    echo "using Bundler \$(echo \$bundler_version) set by Gemfile.lock"
    eval "\$bundle _\$(echo \$bundler_version)_ \$*"
  fi
}

bundler() {
  bundle
}
EOL
}

install() {
  if [ "$1" = "" ]; then
    gem install bundler
  else
    gem install bundler -v $1
  fi
}

version() {
  if [ -e "Gemfile.lock" ]; then
    echo "Bundler version $(_gemfile_lock_bundler_version) (set by $(_gemfile_lock_path))"
  else
    $(_bundler_exec_path) -v
  fi
}

versions() {
  # fetch bundler version you have to use
  if [ -e "Gemfile.lock" ]; then
    local bundler_version=$(_gemfile_lock_bundler_version)
    local description="(set by $(_gemfile_lock_path))"
  else
    local bundler_version=$($(_bundler_exec_path) -v | sed -e 's/Bundler version //')
  fi

  # check version presence set by Gemfile.lock
  local version_list=$(_installed_versions)
  if [ "$(echo $version_list | grep $bundler_version)" = "" ]; then
    echo "  $bundler_version (set by $(_gemfile_lock_path)) is not exist."
  fi

  # one version only
  if [ "$(echo $version_list | grep ',')" = "" ]; then
    echo "* $version_list $description"
    return 0
  fi

  # show version list
  local num=1
  while :
  do
    local _version=$(echo $version_list | cut -d"," -f$num | sed -e "s/ //")
    if [ "$_version" = ""  ]; then
      break
    elif [ "$_version" = $bundler_version ]; then
      echo "* $_version $description"
    else
      echo "  $_version"
    fi
    num=$(($num+1))
  done
}

self_version() {
  local bundlerenv_version="0.3.1"
  echo "bundlerenv $bundlerenv_version"
}

# private

_installed_versions() {
  gem list ^bundler$ | sed -e 's/bundler (//' -e 's/)//'
}

_bundler_exec_path() {
  if [ "$BUNDLER_PATH" = "" ]; then
    echo "/usr/local/var/rbenv/shims/bundle"
  else
    echo $BUNDLER_PATH
  fi
}

_gemfile_lock_bundler_version() {
  echo $(
      grep 'BUNDLED WITH' -A1 Gemfile.lock |
      grep '\d\+\.\d\+\.\d\+' |
      sed -e 's/   //'
    )
}

_gemfile_lock_path() {
  echo "$PWD/Gemfile.lock"
}

main "$@"
